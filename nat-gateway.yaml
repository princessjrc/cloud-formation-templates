AWSTemplateFormatVersion: 2010-09-09

Description: This template creates a NAT gateway in each of the public subnets.

Parameters:
  ExportVpcStackName:
    Description: The name of the VPC stack that exports values.
    Type: String

Resources:
  # Allocate Elastic IP Address (EIP 1)
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
      Tags:
        - Key: Name
          Value: EIP 1

  # Allocate Elastic IP Address (EIP 2)
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC
      Tags:
        - Key: Name
          Value: EIP 2

  # Create NAT Gateway 1 in Public Subnet 1    
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet1
      Tags:
        - Key: Name
          Value: NAT Gateway Public Subnet 1

  # Create NAT Gateway 2 in Public Subnet 2   
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PublicSubnet2
      Tags:
        - Key: Name
          Value: NAT Gateway Public Subnet 2

  # Create Private Route Table 1 
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: Private Route Table 1
      VpcId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC

  # Add a route to point internet-bound traffic to NAT Gateway 1      
  PrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1

  # Associate Private App Subnet 1 with Private Route Table 1
  PrivateAppSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateAppSubnet1

  # Associate Private Data Subnet 1 with Private Route Table 1
  PrivateDataSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateDataSubnet1

  # Create Private Route Table 2
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: Private Route Table 2
      VpcId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-VPC

  # Add a route to point internet-bound traffic to NAT Gateway 2    
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2

  # Associate Private App Subnet 2 with Private Route Table 2
  PrivateAppSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateAppSubnet2

  # Associate Private Data Subnet 2 with Private Route Table 2
  PrivateDataSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateDataSubnet2